{"remainingRequest":"D:\\WorkSpace\\localCode\\CS211180\\client_admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\WorkSpace\\localCode\\CS211180\\client_admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\localCode\\CS211180\\client_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\localCode\\CS211180\\client_admin\\src\\views\\student\\view.vue?vue&type=template&id=bbeb82da&","dependencies":[{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_admin\\src\\views\\student\\view.vue","mtime":1642669596000},{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}