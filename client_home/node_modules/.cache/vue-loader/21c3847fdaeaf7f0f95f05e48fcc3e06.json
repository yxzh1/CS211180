{"remainingRequest":"D:\\WorkSpace\\localCode\\CS211180\\client_home\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\WorkSpace\\localCode\\CS211180\\client_home\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\localCode\\CS211180\\client_home\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\localCode\\CS211180\\client_home\\src\\views\\index.vue?vue&type=template&id=a83bd3b0&scoped=true&","dependencies":[{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_home\\src\\views\\index.vue","mtime":1710236176058},{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_home\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\localCode\\CS211180\\client_home\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}